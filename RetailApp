  
class User{

    int userId;
    String userName;
    String Email;

    User(int userId,String userName,String Email){
      this.userId= userId;
      this.userName = userName;
      this.Email=Email;
    }

    void LogIn(){
        System.out.println(userName);
    }
    void LogOut(){
    }
}
class Customer extends User{

    int customerId;
    String address;
    public Customer(int userId, String userName, String Email,int customerId,String address) {
        super(userId, userName, Email);
        this.customerId = customerId;
        this.address= address;
    }
    
    void placeOrder(Product[] products){
        
    
         
    }

     
    List<Order> orderHistory = new ArrayList<>();
    
    void addOrderToHistory(Order order){
       orderHistory.add(order);
    }
    
     
    void viewOrderHistory( ){

         if(orderHistory.isEmpty()){
          System.out.println("No order history");
         }else{
            for(Order order: orderHistory ){
                System.out.println("Order ID: " + order.orderId);
                System.out.println("Order Date: " + order.orderDate);
                System.out.println("Total Amount: $" + order.totalAmount);
                System.out.println("-------------");
            }
         }

    }

}

class Admin extends User{
    int adminId;
    String department;
    public Admin(int userId, String userName, String Email,int adminId,String department) {
        super(userId, userName, Email);
        this.adminId=adminId;
        this.department=department;
    }
}

class Product{
     int productId;
     String name;
     int price;
     int stockQuantity;

     Product(int productId,String name,int price,int stockQuantity){
        this.productId=productId;
        this.name=name;
        this.price=price;
        this.stockQuantity = stockQuantity;
     }

     void UpdatePrice(){

     }

     void UpdateStock(){
     }

}

class Order{
   int orderId;
   int customerId;
   Product[] products;
   int totalAmount;
   int orderDate;

   Order(int orderId,int customerId,Product[] products,int totalAmount,int orderDate){
        this.orderId = orderId;
        this.customerId = customerId;
        this.products = products;
        this.totalAmount = totalAmount;
        this.orderDate = orderDate;
   }

   void calculateTotalAmount(){
       for(Product prods : products){
         totalAmount+=prods.price;
       }
   }

   void addProductToOrder(){
   }

   void confirmOrder(){
   }


}



public class Inhiretance {

    public static void main(String[] args) {

        User user1 = new User(1, "JohnDoe", "john@example.com");
        Customer customer1 = new Customer(2, "AliceSmith", "alice@example.com", 101, "123 Main St");
        Admin admin1 = new Admin(3, "AdminUser", "admin@example.com", 201, "IT Department");

        // Create products
        Product product1 = new Product(101, "Laptop", 1000, 10);
        Product product2 = new Product(102, "Smartphone", 500, 20);
        Product product3 = new Product(103, "Tablet", 300, 15);

        // Create an order with products
        Product[] productsInOrder = { product1, product2, product3 };
        Order order1 = new Order(1, customer1.customerId, productsInOrder, 0, 20230904);
        
        // Calculate the total amount for the order
//        customer1.placeOrder();
        order1.calculateTotalAmount();
        
       
        
//        customer1.addOrderToHistory(order1);
//        customer1.viewOrderHistory();
        customer1.LogIn();
    }
}
