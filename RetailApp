
import java.util.ArrayList;
import java.util.List;
import java.util.*;

/**
 *
 * @author carlconrad
 */

class User{

    int userId;
    String userName;
    String Email;

    User(int userId,String userName,String Email){
      this.userId= userId;
      this.userName = userName;
      this.Email=Email;
    }
    
    void LogIn(){
        System.out.println(userName);
    }
    void LogOut(){
    }
}
class Customer extends User{

    int customerId;
    String address;
     
    
    
    Customer(){
     super(0,"","");
    }
    public Customer(int userId, String userName, String Email,int customerId,String address) {
        super(userId, userName, Email);
        this.customerId = customerId;
        this.address= address;      
       
    }
    
    void placeOrder(Admin admin){   
      List<Product> prod = admin.products;
      for(Product prodt : prod){
      System.out.println("{" + "id: " + prodt.productId + "\t name: " + prodt.name + "\t price: " + prodt.price + "\t Quantity: " + prodt.stockQuantity + "}");
       }
           
    }

     
   
    
   
    
    void addOrderToHistory(Order order){
      
    }
    
     
    void viewOrderHistory( ){

    }

}

class Admin extends User{
    int adminId;
    String department;
    
     Scanner sc = new Scanner(System.in);
   Admin(){
   super(0,"","");
   }
     Admin(int userId, String userName, String Email,int adminId,String department) {
        super(userId, userName, Email);
        this.adminId=adminId;
        this.department=department;
    }
    
    
    
     List<Product> products = new ArrayList<>();   
    
     void defaultProducts(){
       Product prod1 = new Product(1,"Laptop",30,50);
       Product prod2 = new Product(2,"Cellphone",20,50);
       Product prod3 = new Product(3,"Tablet",10,50); 
       
       products.add(prod1);
       products.add(prod2);
       products.add(prod3);      
     }
     
     
     
     
     void addProduct(){
         
          System.out.print("Enter Product Id: ");
          int prodId =  sc.nextInt();
          
          sc.nextLine();
          System.out.print("Enter Name: ");
          String prodName = sc.nextLine();
          
          System.out.print("Enter Price: ");
          int prodPrice = sc.nextInt();
          
          System.out.print("Enter Stock Quantity");
          int stockQty =sc.nextInt();
                  
          Product prod  = new Product(prodId,prodName,prodPrice,stockQty);
          products.add(prod);
     }
     
     void RemoveProduct(int x){
         for(Product prod: products){
            if(prod.productId == x){
             products.remove(prod);
             return;
            }
         }
     }
     
     void ManageInventory(){
         
          System.out.print("Enter Id to Update ");
          int id = sc.nextInt();
          
          for(Product prod: products){
             if(prod.productId == id){
              System.out.print("Update Price: ");
               int prodPrice = sc.nextInt();
          
              System.out.print("Update Stock Quantity");
              int stockQty =sc.nextInt();
              
              prod.price = prodPrice;
              prod.stockQuantity = stockQty;
              return;
             }
          }
     }
     
     
     
      
    void displayProds() {
        for (Product prodt : products) {         
          System.out.println("{" + "id: " + prodt.productId + "\t name: " + prodt.name + "\t price: " + prodt.price + "\t Quantity: " + prodt.stockQuantity + "}");
        }         
    }  
}

class Product{
     int productId;
     String name;
     int price;
     int stockQuantity;
     Product prod;
     
     

     Product(int productId,String name,int price,int stockQuantity){
        this.productId=productId;
        this.name=name;
        this.price=price;
        this.stockQuantity = stockQuantity;
     }
     
    
     void PlaceOrder(){
          
     }

     void UpdatePrice(){
     }

     void UpdateStock(){
     }
     
   
}

class Order{
   int orderId;
   int customerId;
   Product[] products;
   int totalAmount;
   int orderDate;
    ArrayList<Product> order = new ArrayList<>();
   Scanner sc = new Scanner(System.in);
   
   Order(){
       
   }
   Order(int orderId,int customerId,Product[] products,int totalAmount,int orderDate){
        this.orderId = orderId;
        this.customerId = customerId;
        this.products = products;
        this.totalAmount = totalAmount;
        this.orderDate = orderDate;
   }
    int total =0;
   void calculateTotalAmount(){
       for(Product prods : order){
         total+=prods.price;
       }
       System.out.println(total);
   }
 
   void addProductToOrder(Admin admin){
       List<Product> prods = admin.products;
       
       System.out.print("Enter id to add: ");
       int id = sc.nextInt();
       
       
       for(Product product : prods){
           if(product.productId == id){
               order.add(product);
             
           }
       }

   }
   
       void printOrder(){
           for(Product ordr : order){
                   System.out.println("{" + "id: " + ordr.productId + "\t name: " + ordr.name + "\t price: " + ordr.price + "\t Quantity: " + ordr.stockQuantity + "}");
           }
   }
       

   void confirmOrder(){
   }


}



public class Inhiretance {

    public static void main(String[] args) {
         Admin  p1 =  new Admin( );
        Customer  p =  new Customer();
         Order order = new Order();
        p1.defaultProducts();     
        
        p.placeOrder(p1);
        
        order.addProductToOrder(p1);
        order.printOrder();
        order.calculateTotalAmount();
            
 
    }
}

